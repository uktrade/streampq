version: 2.1

jobs:
  download-test-reporter:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Download test reporter
          command: |
            set -exu
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - persist_to_workspace:
          root: ./
          paths:
            - cc-test-reporter
  test:
    parameters:
      python-version:
        type: string
      postgres-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
        environment:
          PYTHON_VERSION: << parameters.python-version >>
          POSTGRES_VERSION: << parameters.postgres-version >>
      - image: cimg/postgres:<< parameters.postgres-version >>
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements-dev.txt
      - run:
          name: Check types
          command: |
            set -exu
            mypy streampq.py
            mypy test_streampq.py
      - run:
          name: Run tests
          no_output_timeout: 30m
          command: |
            set -exu
            ~/workspace/cc-test-reporter before-build
            ./test.sh
            coverage combine
            coverage xml
            ~/workspace/cc-test-reporter format-coverage --output coverage/<< parameters.python-version >>-<< parameters.postgres-version >>.json
      - persist_to_workspace:
          root: ./
          paths:
            - coverage/*.json
  upload-coverage:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Upload coverage
          command: |
            set -exu
            ~/workspace/cc-test-reporter sum-coverage ~/workspace/coverage/*.json -p 9
            ~/workspace/cc-test-reporter upload-coverage

workflows:
  test:
    jobs:
      - download-test-reporter
      - test:
          requires:
            - download-test-reporter
          matrix:
            parameters:
              python-version:
                - "3.7.11"
                - "3.8.12"
                - "3.9.7"
              postgres-version:
                - "14.2"
                - "13.6"
                - "12.10"

      - upload-coverage:
          requires:
            - test
